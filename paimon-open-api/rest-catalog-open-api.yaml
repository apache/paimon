#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
openapi: 3.0.1
info:
  title: RESTCatalog API
  description: This API exposes endpoints to RESTCatalog.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: "1.0"
servers:
  - url: http://localhost:8080
    description: Server URL in Development environment
paths:
  /api/v1/{prefix}/databases:
    get:
      tags:
        - database
      summary: List Databases
      operationId: listDatabases
      parameters:
        - name: prefix
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatabasesResponse'
    post:
      tags:
        - database
      summary: Create Databases
      operationId: createDatabases
      parameters:
        - name: prefix
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatabaseRequest'
        required: true
      responses:
        "409":
          description: Resource has exist
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatabaseResponse'
  /api/v1/{prefix}/databases/{database}:
    get:
      tags:
        - database
      summary: Get Database
      operationId: getDatabases
      parameters:
        - name: prefix
          in: path
          required: true
          schema:
            type: string
        - name: database
          in: path
          required: true
          schema:
            type: string
      responses:
        "404":
          description: Resource not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDatabaseResponse'
  /api/v1/config:
    get:
      tags:
        - config
      summary: Get Config
      operationId: getConfig
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
        "500":
          description: Internal Server Error
components:
  schemas:
    CreateDatabaseRequest:
      type: object
      properties:
        name:
          type: string
          writeOnly: true
        ignoreIfExists:
          type: boolean
          writeOnly: true
        properties:
          type: object
          additionalProperties:
            type: string
          writeOnly: true
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          writeOnly: true
        code:
          type: integer
          format: int32
          writeOnly: true
        stack:
          type: array
          writeOnly: true
          items:
            type: string
    CreateDatabaseResponse:
      type: object
      properties:
        name:
          type: string
          writeOnly: true
        properties:
          type: object
          additionalProperties:
            type: string
          writeOnly: true
    DatabaseName:
      type: object
      properties:
        name:
          type: string
          writeOnly: true
    ListDatabasesResponse:
      type: object
      properties:
        databases:
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/DatabaseName'
    GetDatabaseResponse:
      type: object
      properties:
        name:
          type: string
          writeOnly: true
        options:
          type: object
          additionalProperties:
            type: string
          writeOnly: true
        comment:
          type: string
          writeOnly: true
    ConfigResponse:
      type: object
      properties:
        defaults:
          type: object
          additionalProperties:
            type: string
          writeOnly: true
        overrides:
          type: object
          additionalProperties:
            type: string
          writeOnly: true
