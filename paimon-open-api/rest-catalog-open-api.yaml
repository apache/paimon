#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
openapi: 3.0.1
info:
  title: RESTCatalog API
  description: This API exposes endpoints to RESTCatalog.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: "1.0"
servers:
  - url: http://localhost:8080
    description: Server URL in Development environment
paths:
  /v1/{prefix}/databases:
    get:
      tags:
        - database
      summary: List Databases
      operationId: listDatabases
      parameters:
        - name: prefix
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatabasesResponse'
        "500":
          description: Internal Server Error
    post:
      tags:
        - database
      summary: Create Databases
      operationId: createDatabases
      parameters:
        - name: prefix
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatabaseRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatabaseResponse'
        "409":
          description: Resource has exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
  /v1/{prefix}/databases/{database}/tables:
    get:
      tags:
        - table
      summary: List tables
      operationId: listTables
      parameters:
        - name: prefix
          in: path
          required: true
          schema:
            type: string
        - name: database
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTablesResponse'
        "500":
          description: Internal Server Error
    post:
      tags:
        - table
      summary: Create table
      operationId: createTable
      parameters:
        - name: prefix
          in: path
          required: true
          schema:
            type: string
        - name: database
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTableRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTableResponse'
        "500":
          description: Internal Server Error
  /v1/{prefix}/databases/{database}/tables/{table}:
    get:
      tags:
        - table
      summary: Get table
      operationId: getTable
      parameters:
        - name: prefix
          in: path
          required: true
          schema:
            type: string
        - name: database
          in: path
          required: true
          schema:
            type: string
        - name: table
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTableResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
    post:
      tags:
        - table
      summary: Alter table
      operationId: alterTable
      parameters:
        - name: prefix
          in: path
          required: true
          schema:
            type: string
        - name: database
          in: path
          required: true
          schema:
            type: string
        - name: table
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlterTableRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTableResponse'
        "500":
          description: Internal Server Error
    delete:
      tags:
        - table
      summary: Drop table
      operationId: dropTable
      parameters:
        - name: prefix
          in: path
          required: true
          schema:
            type: string
        - name: database
          in: path
          required: true
          schema:
            type: string
      responses:
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
  /v1/{prefix}/databases/{database}/tables/{table}/rename:
    post:
      tags:
        - table
      summary: Rename table
      operationId: renameTable
      parameters:
        - name: prefix
          in: path
          required: true
          schema:
            type: string
        - name: database
          in: path
          required: true
          schema:
            type: string
        - name: table
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameTableRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTableResponse'
        "500":
          description: Internal Server Error
  /v1/{prefix}/databases/{database}/properties:
    post:
      tags:
        - database
      summary: Alter Database
      operationId: alterDatabase
      parameters:
        - name: prefix
          in: path
          required: true
          schema:
            type: string
        - name: database
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlterDatabaseRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlterDatabaseResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
  /v1/{prefix}/databases/{database}:
    get:
      tags:
        - database
      summary: Get Database
      operationId: getDatabases
      parameters:
        - name: prefix
          in: path
          required: true
          schema:
            type: string
        - name: database
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDatabaseResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
    delete:
      tags:
        - database
      summary: Drop Database
      operationId: dropDatabase
      parameters:
        - name: prefix
          in: path
          required: true
          schema:
            type: string
        - name: database
          in: path
          required: true
          schema:
            type: string
      responses:
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
  /v1/config:
    get:
      tags:
        - config
      summary: Get Config
      operationId: getConfig
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
        "500":
          description: Internal Server Error
components:
  schemas:
    CreateDatabaseRequest:
      type: object
      properties:
        name:
          type: string
        options:
          type: object
          additionalProperties:
            type: string
    CreateDatabaseResponse:
      type: object
      properties:
        name:
          type: string
        options:
          type: object
          additionalProperties:
            type: string
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        stack:
          type: array
          items:
            type: string
    CreateTableRequest:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier'
        schema:
          $ref: '#/components/schemas/Schema'
    DataField:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        type:
          $ref: '#/components/schemas/DataType'
        description:
          type: string
    DataType:
      anyOf:
        - type: string
        - type: object
    Identifier:
      type: object
      properties:
        database:
          type: string
        table:
          type: string
        branch:
          type: string
    Schema:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/DataField'
        partitionKeys:
          type: array
          items:
            type: string
        primaryKeys:
          type: array
          items:
            type: string
        options:
          type: object
          additionalProperties:
            type: string
        comment:
          type: string
    GetTableResponse:
      type: object
      properties:
        path:
          type: string
        schemaId:
          type: integer
          format: int64
        schema:
          $ref: '#/components/schemas/Schema'
    AlterTableRequest:
      type: object
      properties:
        changes:
          type: array
          items:
            $ref: '#/components/schemas/SchemaChange'
    SchemaChange:
      anyOf:
        - $ref: '#/components/schemas/SetOption'
        - $ref: '#/components/schemas/RemoveOption'
        - $ref: '#/components/schemas/UpdateComment'
        - $ref: '#/components/schemas/AddColumn'
        - $ref: '#/components/schemas/RenameColumn'
        - $ref: '#/components/schemas/DropColumn'
        - $ref: '#/components/schemas/UpdateColumnComment'
        - $ref: '#/components/schemas/UpdateColumnType'
        - $ref: '#/components/schemas/UpdateColumnPosition'
        - $ref: '#/components/schemas/UpdateColumnNullability'
    SetOption:
      type: object
      properties:
        action:
          type: string
          enum: ["set_option"]
        additionalProperties:
          type: string
    RemoveOption:
      type: object
      properties:
        action:
          type: string
          enum: ["remove_option"]
        removeOptionKey:
          type: string
    UpdateComment:
      type: object
      properties:
        action:
          type: string
          enum: ["update_comment"]
        comment:
          type: string
    AddColumn:
      type: object
      properties:
        action:
          type: string
          enum: ["add_column"]
        fieldNames:
          type: array
          items:
            type: string
        dataType:
          $ref: '#/components/schemas/DataType'
        comment:
          type: string
        move:
          $ref: '#/components/schemas/Move'
    RenameColumn:
      type: object
      properties:
        action:
          type: string
          enum: ["rename_column"]
        fieldNames:
          type: array
          items:
            type: string
        newName:
          type: string
    DropColumn:
      type: object
      properties:
        action:
          type: string
          enum: ["drop_column"]
        fieldNames:
          type: array
          items:
            type: string
    UpdateColumnComment:
      type: object
      properties:
        action:
          type: string
          enum: [ "update_column_comment" ]
        fieldNames:
          type: array
          items:
            type: string
        comment:
          type: string
    UpdateColumnType:
      type: object
      properties:
        action:
          type: string
          enum: [ "update_column_type" ]
        fieldNames:
          type: array
          items:
            type: string
        dataType:
          $ref: '#/components/schemas/DataType'
        keepNullability:
          type: boolean
    UpdateColumnPosition:
      type: object
      properties:
        action:
          type: string
          enum: [ "update_column_position" ]
        move:
          $ref: '#/components/schemas/Move'
    UpdateColumnNullability:
      type: object
      properties:
        action:
          type: string
          enum: [ "update_column_nullability" ]
        fieldNames:
          type: array
          items:
            type: string
        newNullability:
          type: boolean
    Move:
      type: object
      properties:
        fieldName:
          type: string
        referenceFieldName:
          type: string
        type:
          type: string
    RenameTableRequest:
      type: object
      properties:
        newIdentifier:
          $ref: '#/components/schemas/Identifier'
    AlterDatabaseRequest:
      type: object
      properties:
        removals:
          type: array
          items:
            type: string
        updates:
          type: object
          additionalProperties:
            type: string
    AlterDatabaseResponse:
      type: object
      properties:
        removed:
          type: array
          items:
            type: string
        updated:
          type: array
          items:
            type: string
        missing:
          type: array
          items:
            type: string
    ListDatabasesResponse:
      type: object
      properties:
        databases:
          type: array
          items:
            type: string
    GetDatabaseResponse:
      type: object
      properties:
        name:
          type: string
        options:
          type: object
          additionalProperties:
            type: string
    ListTablesResponse:
      type: object
      properties:
        tables:
          type: array
          items:
            type: string
    ConfigResponse:
      type: object
      properties:
        defaults:
          type: object
          additionalProperties:
            type: string
        overrides:
          type: object
          additionalProperties:
            type: string

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
